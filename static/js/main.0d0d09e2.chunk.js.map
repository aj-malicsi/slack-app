{"version":3,"sources":["components/Login/LoginForm.js","components/Registration/RegistrationForm.js","components/Channels/ChannelList.js","components/Channels/MainPage.js","components/Messaging/ChannelDisplay.js","components/Messaging/ChannelMessages.js","components/Channels/Channel.js","components/Channels/SelectedChannel.js","components/Users/UserDisplay.js","components/Users/UserSearch.js","components/Messaging/UserMessagesDisplay.js","components/Messaging/UserMessages.js","App.js","index.js"],"names":["LoginForm","props","history","useHistory","useForm","register","handleSubmit","errors","formState","className","onSubmit","data","axios","post","email","password","then","response","uid","setLoggedIn","setHeaders","headers","push","catch","error","console","log","htmlFor","type","id","required","to","RegistrationForm","password2","firstName","lastName","ChannelList","channels","map","channel","name","MainPage","user","localStorage","getItem","headersList","expiry","client","users","loggedIn","useEffect","length","get","setUsers","message","channelArr","setChannels","undefined","addUsers","splitUsers","split","pop","channelData","newChannel","user_ids","placeholder","minLength","from","ChannelDisplay","messageArr","messages","body","sender","ChannelMessages","useState","setMessages","messageData","receiver_id","receiver_class","Channel","index","member_id","newUser","SelectedChannel","match","params","channelName","channelId","UserDisplay","UserSearch","setUser","parseInt","searchUser","userArr","i","findUser","UserMessagesDisplay","UserMessages","userId","userName","App","selectedChannel","setSelectedChannel","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d0d09e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n\r\n  let history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n \r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(\"https://slackapi.avionschool.com/api/v1/auth/sign_in\", {\r\n          email: data.email,\r\n          password: data.password,\r\n\r\n      })\r\n      .then((response) => {\r\n       \r\n        if(typeof response.data.data.uid === 'string'){\r\n          // console.log(\"its a string\", response.data.data.uid)\r\n          // props.setLoggedIn(response.data.data.uid)\r\n          props.setLoggedIn(response.data.data)\r\n          \r\n          props.setHeaders(response.headers)\r\n          // console.log(\"test\", props.headers)\r\n\r\n          history.push('/main-page')\r\n        }\r\n        \r\n\r\n          \r\n      })\r\n      .catch((error) => console.log(\"Hello\", error));\r\n\r\n      \r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-10 rounded shadow-2xl w-1/3\">\r\n      <h2 className=\"text-3xl font-bold mb-10 text-gray-500 ml-28\">\r\n        Member Login\r\n      </h2>\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-5\">\r\n        <div className=\"flex flex-col mr-48 w-full\">\r\n          <label htmlFor=\"Email\" className=\"font-bold mb-2 text-gray-500\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"Email\"\r\n            {...register(\"email\", { required: true })}\r\n            className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300\"\r\n          />\r\n          <div className=\"text-red-600\">\r\n            {errors.email && \"Email is required\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col mr-48 w-full\">\r\n          <label htmlFor=\"password\" className=\"font-bold mb-2 text-gray-500\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            {...register(\"password\", { required: true })}\r\n            className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300\"\r\n          />\r\n          <div className=\"text-red-600\">\r\n            {errors.password && \"Password is required\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <button className=\"block w-full bg-yellow-500 hover:bg-yellow-400 p-4 rounded text-white font-bold\">\r\n            Log In\r\n          </button>\r\n          <div className=\"flex justify-center mt-5 font-medium\">\r\n            <p className=\"text-gray-600\">Not a member?</p>\r\n            <p className=\"ml-3\">\r\n              <Link\r\n                to=\"/RegistrationForm\"\r\n                className=\"text-blue-800 hover:text-blue-500\"\r\n              >\r\n                Signup now\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","// import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RegistrationForm(props) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  // const [users, setUsers] = useState([]);\r\n\r\n  // let userArray = users;\r\n\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post(\"https://slackapi.avionschool.com/api/v1/auth\", {\r\n        email: data.email,\r\n        password: data.password,\r\n        password2: data.password2,\r\n      })\r\n      .then((response) => {\r\n        // userArray.push(response.data);\r\n        // console.log(response.data);\r\n        // setUsers([...userArray]);\r\n        // console.log(\"users data\", users);\r\n      })\r\n      .catch((error) => console.log(\"this is an error\", error));\r\n\r\n    if (data.password !== data.password2) {\r\n      console.log(`Password do not match`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-10 rounded shadow-2xl w-1/3\">\r\n      <h2 className=\"text-3xl font-bold mb-10 text-gray-500 ml-20\">\r\n        Create Your Account\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-5\">\r\n        <div className=\"flex flex-col mr-48 w-full \">\r\n          <label htmlFor=\"firstName\" className=\"font-bold mb-2 text-gray-500\">\r\n            First Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            {...register(\"firstName\", { required: true })}\r\n            className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300 \"\r\n          />\r\n          <div className=\"text-red-600\">\r\n            {errors.firstName && \"First name is required\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col mr-48 w-full \">\r\n          <label htmlFor=\"lastName\" className=\"font-bold mb-2 text-gray-500\">\r\n            Last Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            {...register(\"lastName\", { required: true })}\r\n            className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300 \"\r\n          />\r\n          <div className=\"text-red-600\">\r\n            {errors.lastName && \"Last name is required\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col mr-48 w-full\">\r\n          <label htmlFor=\"Email\" className=\"font-bold mb-2 text-gray-500\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"Email\"\r\n            {...register(\"email\", { required: true })}\r\n            className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300\"\r\n          />\r\n          <div className=\"text-red-600\">\r\n            {errors.email && \"Email is required\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col mr-48 w-full\">\r\n          <label htmlFor=\"password\" className=\"font-bold mb-2 text-gray-500\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            {...register(\"password\", { required: true })}\r\n            className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300\"\r\n          />\r\n          <div className=\"text-red-600\">\r\n            {errors.password && \"Password is required\"}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col mr-48 w-full\">\r\n          <label htmlFor=\"password2\" className=\"font-bold mb-2 text-gray-500\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password2\"\r\n            {...register(\"password2\", { required: true })}\r\n            className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300\"\r\n          />\r\n          <div className=\"text-red-600\">\r\n            {errors.password2 && \"Password is required\"}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button className=\"block w-full bg-yellow-500 hover:bg-yellow-400 p-4 rounded text-white font-bold\">\r\n            Sign up\r\n          </button>\r\n          <div className=\"flex justify-center mt-5 font-medium\">\r\n            <p>Already have an account?</p>\r\n            <p className=\"ml-3\">\r\n              <Link to=\"/\" className=\"text-blue-800 hover:text-blue-500\">\r\n                Log in here\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction ChannelList(props){\r\n\r\n    let channels = props.channels\r\n    \r\n\r\n    return(\r\n        <>\r\n    <div className=\"bg-pink-800 w-40 text-white \" >Channels\r\n     <ul className=\"text-center\">\r\n       {\r\n        props.channels.map((channel) => {\r\n          return (\r\n            <> \r\n            <p key={channel.id} \r\n               className =\"hover:text-green-400\">\r\n\r\n              <Link to={`/channel/${channel.id}/${channel.name}`}>{channel.name}</Link>\r\n            </p>\r\n            </>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ChannelList","import { Redirect, useHistory, Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from 'react';\r\nimport ChannelList from \"./ChannelList\";\r\n\r\nfunction MainPage(props) {\r\n  const user = localStorage.getItem(\"loggedIn\");\r\n\r\n  let history = useHistory();\r\n\r\n  let tempChannel = {}\r\n\r\n  \r\n\r\n \r\n  const headersList = {\r\n    \"access-token\": props.headers[\"access-token\"],\r\n    expiry: props.headers.expiry,\r\n    client: props.headers.client,\r\n    uid: props.headers.uid,\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  let users = [props.loggedIn.id];\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    console.log(data.addUsers)\r\n    let splitUsers = data.addUsers.split(\",\")\r\n    \r\n\r\n    splitUsers.push(users.pop())\r\n    console.log(splitUsers)\r\n    \r\n    let channelData = {\r\n      name: data.newChannel,\r\n      user_ids: splitUsers,\r\n    };\r\n   \r\n\r\n    // console.log(\"channel data obj\", channelData);\r\n\r\n    axios\r\n      .post(\"https://slackapi.avionschool.com/api/v1/channels\", channelData, {\r\n        headers: headersList,\r\n      })\r\n\r\n      .then((response) => {\r\n        // console.log(headersList);\r\n        // console.log(\"post\", response.data);\r\n\r\n        console.log(response.data.errors)\r\n        if(response.data.errors === undefined){\r\n          history.push(\"/channel\");\r\n        }\r\n        else if(response.data.errors.length > 0){\r\n          history.push(\"/main-page\")\r\n        }        \r\n        // console.log(response);\r\n\r\n        axios\r\n          .get(\"https://slackapi.avionschool.com/api/v1/channels\", {\r\n            headers: headersList,\r\n          })\r\n          .then((response) => {\r\n            console.log(\"get response\", response.data.data);\r\n            let channelArr = response.data.data;\r\n            props.setChannels(channelArr);\r\n\r\n            if(channelArr[channelArr.length - 1].id)\r\n            console.log(channelArr[channelArr.length - 1].id)\r\n          })\r\n          .catch((error) => console.log(error.message));\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message)\r\n        history.push(\"/main-page\")\r\n      });\r\n\r\n  };\r\n\r\n    \r\n    // console.log(props.users.length)\r\n    \r\n\r\n    useEffect( () =>{\r\n      if(props.users.length === 0){\r\n        console.log(\"use effect main page check\")\r\n        axios\r\n            .get(\"https://slackapi.avionschool.com/api/v1/users\", {\r\n              headers: headersList,\r\n            })\r\n            .then((response) => {\r\n              // console.log(props.users.length)\r\n              console.log(\"GET RESPONSE USERS\", response.data.data);\r\n              props.setUsers(response.data.data)\r\n  \r\n            \r\n            })\r\n            .catch((error) => console.log(error.message));\r\n      if(props.channels.length === 0){\r\n        axios\r\n          .get(\"https://slackapi.avionschool.com/api/v1/channels\", {\r\n            headers: headersList,\r\n          })\r\n          .then((response) => {\r\n            console.log(\"GET CHANNEL RESPONSE USE EFFECT\", response.data.data);\r\n            let channelArr = response.data.data;\r\n            props.setChannels(channelArr);\r\n          })\r\n          .catch((error) => console.log(error.message));\r\n      }\r\n\r\n    }\r\n\r\n    },[])\r\n    \r\n\r\n\r\n\r\n\r\n  if (props.loggedIn !== undefined && props.loggedIn !== \"\") {\r\n    return (\r\n      // //Main Page UI\r\n\r\n      // <div className=\"relative min-h-screen flex\">\r\n      //   <div className=\"bg-purple-800 w-64 flex flex-col p-3\">\r\n      //     <div className=\"bg-green-100 p-2\">User Name</div>\r\n      //     <div>Channels</div>\r\n      //   </div>\r\n      //   <div className=\"p-8 flex-1\">Chatbox goes here</div>\r\n      // </div>\r\n      <>\r\n     \r\n     \r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-600\">\r\n      <div className=\"min-h-screen flex\">\r\n        <div className=\"bg-purple-800 w-64 flex flex-col p-3\">\r\n          <ChannelList \r\n          channels={props.channels}/>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      \r\n        <div className=\"bg-white p-10 rounded shadow-2xl w-1/3\">\r\n        \r\n          <h2 className=\"text-3xl font-bold mb-10 text-gray-500 ml-28\">\r\n            Create Channel\r\n          </h2>\r\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-5\">\r\n            <div className=\"flex flex-col mr-48 w-full\">\r\n              <input\r\n                type=\"newChannel\"\r\n                id=\"newChannel\"\r\n                placeholder=\"Create New Channel\"\r\n                {...register(\"newChannel\", { required: true })}\r\n                className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col mr-48 w-full\">\r\n            <input\r\n              type=\"addUsers\"\r\n              id=\"addUsers\"\r\n              placeholder=\"Add a User ID\"\r\n              minLength=\"3\"\r\n              {...register(\"addUsers\", { required: true })}\r\n              className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300\"\r\n            />\r\n          </div>\r\n          {/* <button className=\" w-24 bg-green-500 hover:bg-green-400 p-1  rounded text-white font-bold mt-3\">\r\n            + Add User\r\n          </button> */}\r\n            <div>\r\n              <button className=\"block w-full bg-green-500 hover:bg-green-400 p-4 rounded text-white font-bold mt-20\">\r\n                Submit\r\n              </button>\r\n\r\n            </div>\r\n            <button className=\"block w-full bg-yellow-500 hover:bg-yellow-400 p-4 rounded text-white font-bold mt-20\">\r\n              <Link\r\n                to=\"/user-search\"\r\n                className=\"text-white-800 hover:text-blue-500\"\r\n              >\r\n                Search User\r\n              </Link>\r\n              </button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n    );\r\n  }\r\n\r\n  if (props.loggedIn === \"\" || user === props.loggedIn) {\r\n    console.log(\"else\", user);\r\n    return <Redirect from=\"/main-page\" to=\"/\" />;\r\n  } else return <div> wenk wonk </div>;\r\n}\r\nexport default MainPage;\r\n","import axios from 'axios'\r\n\r\nfunction ChannelDisplay(props){\r\n    // console.log(props)\r\n    const messageArr = props.messages\r\n    console.log(messageArr)\r\n    \r\n    return(\r\n        <>\r\n        <div>display messages here</div>\r\n        <ul className=\"text-center w-1/2 border-solid border-2 border-black\">\r\n          {\r\n            messageArr.map((message) => {\r\n              return (\r\n                <> \r\n                <div key={message.id}>\r\n                  {message.body} sent by {message.sender.uid}\r\n                </div>\r\n                </>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ChannelDisplay","import axios from 'axios'\r\nimport { get, useForm } from \"react-hook-form\";\r\nimport ChannelDisplay from './ChannelDisplay';\r\nimport {useState, useEffect} from 'react'\r\n\r\nfunction ChannelMessages(props){\r\n    //react hook form variables\r\n\r\n    const [messages, setMessages] = useState([])\r\n    console.log(\"messages\",props.id)\r\n    \r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n      } = useForm();\r\n\r\n    //add headers for get/post requests\r\n    const headersList = {\r\n        \"access-token\": props.headers[\"access-token\"],\r\n        expiry: props.headers.expiry,\r\n        client: props.headers.client,\r\n        uid: props.headers.uid,\r\n      };\r\n\r\n   \r\n      const channels = props.channels\r\n      const index = channels.length - 1\r\n\r\n\r\n    //form submit\r\n    const onSubmit = (data) => {\r\n        \r\n        let messageData ={\r\n            receiver_id: props.id,\r\n            receiver_class: \"Channel\",\r\n            body: data.message,\r\n\r\n        }\r\n  \r\n        axios.post(\"https://slackapi.avionschool.com/api/v1/messages\", messageData, {\r\n                headers: headersList,\r\n            })\r\n\r\n            .then((response) => {\r\n                console.log(\"POST RESPONSE\")\r\n                console.log(response)\r\n                axios\r\n                    .get(`https://slackapi.avionschool.com/api/v1/messages?receiver_id=${props.id}&receiver_class=Channel`,{\r\n                        headers: headersList,\r\n                    })\r\n                    .then((response) =>{\r\n                        console.log(\"GET RESPONSE\")\r\n                        console.log(response.data.data)\r\n                        setMessages(response.data.data)\r\n                        \r\n\r\n                    })\r\n                    .catch( (error) => console.log(error.message) );    \r\n\r\n            })\r\n            .catch((error) => console.log(error.message));\r\n\r\n        \r\n\r\n    }\r\n    \r\n\r\n        useEffect( () =>{\r\n            axios\r\n            .get(`https://slackapi.avionschool.com/api/v1/messages?receiver_id=${props.id}&receiver_class=Channel`,{\r\n                headers: headersList,\r\n            })\r\n            .then((response) =>{\r\n                console.log(\"GET RESPONSE\")\r\n                console.log(response.data.data)\r\n                setMessages(response.data.data)   \r\n\r\n            })\r\n            .catch( (error) => console.log(error.message) );\r\n\r\n        },[props.id])\r\n\r\n        \r\n\r\n      \r\n\r\n    \r\n        return(\r\n            <>\r\n            <div>channel messages</div>\r\n            <ChannelDisplay\r\n            messages={messages}\r\n            />\r\n            \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n    \r\n            <input\r\n                type=\"text\"\r\n                id=\"message\"\r\n                placeholder=\"say something!\"\r\n                {...register(\"message\")}\r\n                className = \"border-solid border-2 border-black\"\r\n            />\r\n            <br></br>\r\n            <button type=\"submit\" className = \"border-solid border-2 border-red-500\">send</button>\r\n    \r\n            \r\n    \r\n    \r\n            </form>\r\n            </>\r\n        )\r\n    \r\n    \r\n    \r\n}\r\n\r\nexport default ChannelMessages","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport ChannelMessages from \"../Messaging/ChannelMessages\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nfunction Channel(props) {\r\n  //   let channels = props.channels;\r\n\r\n  // console.log(props.channels.length);\r\n  let index = props.channels.length - 1;\r\n  // console.log(props)\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const headersList = {\r\n    \"access-token\": props.headers[\"access-token\"],\r\n    expiry: props.headers.expiry,\r\n    client: props.headers.client,\r\n    uid: props.headers.uid,\r\n  };\r\n\r\n  \r\n\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(\"add user =>\",data)\r\n    // console.log(\"add user =>\",headersList)\r\n\r\n    let channelData = {\r\n      id: props.channels[index].id,\r\n      member_id: data.newUser,\r\n    };\r\n\r\n    // console.log(\"ADD USER =>\")\r\n    // console.log(channelData)\r\n\r\n    axios\r\n      .post(\"https://slackapi.avionschool.com/api/v1/channel/add_member\", channelData, {\r\n        headers: headersList,\r\n      })\r\n\r\n      .then((response) => {\r\n        console.log(\"ADD USER =>\")\r\n        console.log(\"post\", response.data);\r\n        console.log(headersList)\r\n\r\n        // axios\r\n        //     .get(`https://slackapi.avionschool.com/api/v1/channel/${props.channels[index].id}`, channelData, {\r\n        //       headers: headersList,\r\n        //     })\r\n\r\n        //     .then((response) => {\r\n        //       console.log(\"GET CHANNEL =>\")\r\n        //       console.log(\"GET\", response.data);\r\n        \r\n        //     })\r\n        //     .catch((error) => console.log(error.message));\r\n  \r\n      })\r\n      .catch((error) => console.log(error.message));\r\n\r\n\r\n  }\r\n \r\n\r\n  if (props.channels.length !== 0) {\r\n    // console.log(props.channels[index].id)\r\n    \r\n\r\n    // console.log(\"CHANNEL LOG\")\r\n    // console.log(props.channels[index])\r\n    return (\r\n      <>\r\n        <div>Channel Name:{props.channels[index].name} ID:{props.channels[index].id}</div>\r\n\r\n        <div>Channel List</div>\r\n      <ul>\r\n      {\r\n        props.channels.map((channel) => {\r\n          return (\r\n            <> \r\n            <div key={channel.id}>\r\n              <Link to={`/channel/${channel.id}/${channel.name}`}>{channel.name}</Link>\r\n            </div>\r\n            </>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n    <ChannelMessages\r\n    id={props.channels[index].id}\r\n    headers={props.headers}\r\n    loggedIn={props.loggedIn}\r\n    channels={props.channels}\r\n    />\r\n\r\n    <Link\r\n      to=\"/main-page\"\r\n      className=\"text-blue-800 hover:text-blue-500\"\r\n    >\r\n      Create a channel\r\n    </Link>\r\n\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        type=\"newUser\"\r\n        id=\"newUser\"\r\n        placeholder=\"Enter User Id Here\"\r\n        minLength=\"3\"\r\n        {...register(\"newUser\")}\r\n      />\r\n\r\n      <button type=\"submit\">Add User</button>\r\n    </form>\r\n  \r\n    </>\r\n\r\n    );\r\n  } \r\n  \r\n  else {\r\n    return <div>wenk wonk</div>;\r\n  }\r\n}\r\n\r\nexport default Channel;\r\n","import React from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport ChannelMessages from \"../Messaging/ChannelMessages\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ChannelList from \"./ChannelList\";\r\n\r\n\r\n\r\nfunction SelectedChannel(props) {\r\n  //   let channels = props.channels;\r\n\r\n  // console.log(props.channels.length);\r\n  let index = props.channels.length - 1;\r\n  console.log(props)\r\n\r\n  const {params: {channelName, channelId} } = props.match;\r\n  console.log(channelName, channelId)\r\n\r\n  //if selected channel id is in the channel array get the channel name to display\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const headersList = {\r\n    \"access-token\": props.headers[\"access-token\"],\r\n    expiry: props.headers.expiry,\r\n    client: props.headers.client,\r\n    uid: props.headers.uid,\r\n  };\r\n\r\n  \r\n\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(\"add user =>\",data)\r\n    // console.log(\"add user =>\",headersList)\r\n\r\n    let channelData = {\r\n      id: channelId,\r\n      member_id: data.newUser,\r\n    };\r\n\r\n    // console.log(\"ADD USER =>\")\r\n    // console.log(channelData)\r\n\r\n    axios\r\n      .post(\"https://slackapi.avionschool.com/api/v1/channel/add_member\", channelData, {\r\n        headers: headersList,\r\n      })\r\n\r\n      .then((response) => {\r\n        console.log(\"ADD USER =>\")\r\n        console.log(\"post\", response.data);\r\n        console.log(headersList)\r\n\r\n  \r\n      })\r\n      .catch((error) => console.log(error.message));\r\n\r\n\r\n  }\r\n  \r\n\r\n\r\n  if (props.channels.length !== 0) {\r\n    return (\r\n      <>\r\n        <div>Channel Name: {channelName} ID: {channelId} </div>\r\n\r\n    <ChannelList \r\n      channels={props.channels}\r\n    />\r\n\r\n    <ChannelMessages\r\n    id={channelId}\r\n    headers={props.headers}\r\n    loggedIn={props.loggedIn}\r\n    channels={props.channels}\r\n    />\r\n\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        type=\"newUser\"\r\n        id=\"newUser\"\r\n        placeholder=\"Enter User Id Here\"\r\n        minLength=\"3\"\r\n        {...register(\"newUser\")}\r\n      />\r\n\r\n      <button type=\"submit\">Add User</button>\r\n    </form>\r\n\r\n    <Link\r\n      to=\"/main-page\"\r\n      className=\"text-blue-800 hover:text-blue-500\"\r\n      >\r\n      Create a channel\r\n    </Link>\r\n\r\n    </>\r\n\r\n    \r\n\r\n    );\r\n  } \r\n  \r\n  else {\r\n    return <div>wenk wonk</div>;\r\n  }\r\n}\r\n\r\nexport default SelectedChannel;\r\n","\r\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\r\n\r\nfunction UserDisplay(props){\r\n\r\n    let user = props.user\r\n\r\n\r\n    return(\r\n        <>\r\n        <div>\r\n              <Link to={`/user-messages/${user.id}/${user.uid}`}>{user.uid}</Link>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserDisplay","import { Redirect, useHistory, Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { useState} from \"react\";\r\nimport UserDisplay from \"./UserDisplay\";\r\n\r\n\r\n\r\nfunction UserSearch(props){\r\n    // console.log(props)\r\n    const [user, setUser] = useState({})\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n      } = useForm();\r\n\r\n    // console.log(props.users[0])\r\n\r\n    let users =  props.users\r\n\r\n    let displayUser = {}\r\n\r\n    const findUser = (userArr, user) =>{\r\n        console.log(userArr, user)\r\n        for(let i = 0; i < userArr.length; i++){\r\n            if(user === userArr[i].id){\r\n                console.log(userArr[i].id, userArr[i].uid)\r\n                setUser(userArr[i])\r\n                return true;\r\n            }\r\n        }\r\n        console.log(\"user couldn't be found\")\r\n\r\n    }\r\n\r\n    // findUser(users, 238)\r\n\r\n    \r\n\r\n\r\n    const onSubmit = (data) =>{\r\n        console.log(data)\r\n\r\n        let user = parseInt(data.searchUser)\r\n        console.log(user)\r\n\r\n        // console.log(\"ON SUBMIT\")\r\n        findUser(users, user)\r\n\r\n        \r\n        \r\n    }\r\n    \r\n        return(\r\n            <>\r\n            <div>Search for a user</div>\r\n    \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n                    type=\"searchUser\"\r\n                    id=\"searchUser\"\r\n                    placeholder=\"Enter User Id\"\r\n                    {...register(\"searchUser\", { required: true })}\r\n                    // className=\"border-2 border-gray-400 p-1 pl-3 rounded outline-none focus:border-blue-300\"\r\n                  />\r\n            <button type=\"submit\">Search</button>\r\n\r\n            <UserDisplay\r\n            user = {user}\r\n            />\r\n\r\n            <Link\r\n            to=\"/main-page\"\r\n            className=\"text-blue-800 hover:text-blue-500\"\r\n            >\r\n            Create a channel\r\n            </Link>\r\n\r\n    \r\n            </form>\r\n            </>\r\n        )\r\n\r\n    \r\n    \r\n\r\n    \r\n}\r\n\r\nexport default UserSearch","import axios from 'axios'\r\n\r\nfunction UserMessagesDisplay(props){\r\n\r\n    let messageArr = props.messages\r\n    \r\n\r\n    return(\r\n        <>\r\n        <div>user messages display</div>\r\n        <ul className=\"border-solid border-2 border-black\">\r\n          {\r\n            messageArr.map((message) => {\r\n              return (\r\n                <> \r\n                <div key={message.id}>\r\n                  {message.body} sent by {message.sender.uid}\r\n                </div>\r\n                </>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserMessagesDisplay","import UserMessagesDisplay from \"./UserMessagesDisplay\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios'\r\nimport {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction UserMessages(props){\r\n    // console.log(props.match)\r\n\r\n    const [messages, setMessages] = useState([])\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n      } = useForm();\r\n\r\n    const{params: {userId, userName}} = props.match\r\n\r\n    //add headers for get/post requests\r\n    const headersList = {\r\n        \"access-token\": props.headers[\"access-token\"],\r\n        expiry: props.headers.expiry,\r\n        client: props.headers.client,\r\n        uid: props.headers.uid,\r\n      };\r\n\r\n    //form submit\r\n    const onSubmit = (data) =>{\r\n        console.log(data)\r\n        \r\n        let messageData ={\r\n            receiver_id: userId,\r\n            receiver_class: \"User\",\r\n            body: data.message,\r\n        }\r\n        \r\n        console.log(messageData)\r\n\r\n        axios.post(\"https://slackapi.avionschool.com/api/v1/messages\", messageData, {\r\n                headers: headersList,\r\n            })\r\n\r\n            .then((response) => {\r\n                console.log(\"POST RESPONSE\")\r\n                console.log(response)\r\n                axios\r\n                    .get(`https://slackapi.avionschool.com/api/v1/messages?receiver_id=${userId}&receiver_class=User`,{\r\n                        headers: headersList,\r\n                    })\r\n                    .then((response) =>{\r\n                        console.log(\"GET RESPONSE\")\r\n                        console.log(response.data.data)\r\n                        setMessages(response.data.data)\r\n                        \r\n\r\n                    })\r\n                    .catch( (error) => console.log(error.message) );    \r\n\r\n            })\r\n            .catch((error) => console.log(error.message));\r\n\r\n    }\r\n\r\n    useEffect( () =>{\r\n        axios\r\n            .get(`https://slackapi.avionschool.com/api/v1/messages?receiver_id=${userId}&receiver_class=User`,{\r\n                headers: headersList,\r\n            })\r\n            .then((response) =>{\r\n                console.log(\"GET RESPONSE\")\r\n                console.log(response.data.data)\r\n                setMessages(response.data.data)\r\n                \r\n\r\n            })\r\n            .catch( (error) => console.log(error.message) ); \r\n\r\n    },[userId])\r\n\r\n    return(\r\n        <>\r\n        <div>messages with {userName}{userId}</div>\r\n\r\n        <UserMessagesDisplay\r\n        messages={messages}\r\n        />\r\n\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n    \r\n        <input\r\n            type=\"text\"\r\n            id=\"message\"\r\n            placeholder=\"say something!\"\r\n            {...register(\"message\")}\r\n            className = \"border-solid border-2 border-black\"\r\n        />\r\n        <br></br>\r\n        <button type=\"submit\" className = \"border-solid border-2 border-red-500\">send</button>\r\n\r\n    </form> \r\n\r\n    <Link\r\n        to=\"/user-search\"\r\n        className=\"text-blue-800 hover:text-blue-500\"\r\n        >\r\n        Find a User\r\n        </Link>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserMessages","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport LoginForm from \"./components/Login/LoginForm\";\r\nimport RegistrationForm from \"./components/Registration/RegistrationForm\";\r\nimport MainPage from \"./components/Channels/MainPage\";\r\nimport Channel from \"./components/Channels/Channel\";\r\nimport SelectedChannel from \"./components/Channels/SelectedChannel\";\r\nimport UserSearch from \"./components/Users/UserSearch\";\r\nimport UserMessages from \"./components/Messaging/UserMessages\";\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(\"\");\r\n  const [headers, setHeaders] = useState({});\r\n  const [channels, setChannels] = useState([]);\r\n  const [selectedChannel, setSelectedChannel] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n  // console.log(\"App() =>\", loggedIn)\r\n  // console.log(\"App JS\", headers)\r\n  // console.log(\"appChannel\", channels);\r\n  // console.log(\"app users =>\", users)\r\n\r\n  return (\r\n    //router\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div className=\"min-h-screen flex items-center justify-center bg-gray-600\">\r\n            <LoginForm\r\n              loggedIn={loggedIn}\r\n              setLoggedIn={setLoggedIn}\r\n              headers={headers}\r\n              setHeaders={setHeaders}\r\n              users={users}\r\n              setUsers={setUsers}\r\n            />\r\n          </div>\r\n        </Route>\r\n\r\n        <Route path=\"/RegistrationForm\">\r\n          <div className=\"min-h-screen flex items-center justify-center bg-gray-600\">\r\n            <RegistrationForm />\r\n          </div>\r\n        </Route>\r\n\r\n        <Route\r\n          exact\r\n          path=\"/main-page\"\r\n          component={() => {\r\n            return (\r\n              <MainPage\r\n                loggedIn={loggedIn}\r\n                headers={headers}\r\n                setHeaders={setHeaders}\r\n                channels={channels}\r\n                setChannels={setChannels}\r\n                users={users}\r\n                setUsers={setUsers}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/channel\"\r\n          component={() => {\r\n            return (\r\n              <Channel\r\n                loggedIn={loggedIn}\r\n                headers={headers}\r\n                setHeaders={setHeaders}\r\n                channels={channels}\r\n                selectedChannel={selectedChannel}\r\n                setSelectedChannel={setSelectedChannel}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/user-search\"\r\n          component={() => {\r\n            return (\r\n              <UserSearch\r\n                loggedIn={loggedIn}\r\n                headers={headers}\r\n                setHeaders={setHeaders}\r\n                channels={channels}\r\n                selectedChannel={selectedChannel}\r\n                setSelectedChannel={setSelectedChannel}\r\n                users={users}\r\n                setUsers={setUsers}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Route\r\n        exact\r\n        path=\"/channel/:channelId/:channelName\"\r\n        render={(props) => <SelectedChannel \r\n          {...props}\r\n          loggedIn={loggedIn}\r\n          headers={headers}\r\n          setHeaders={setHeaders}\r\n          channels={channels}\r\n          selectedChannel={selectedChannel}\r\n          setSelectedChannel={setSelectedChannel}\r\n        />}\r\n        />\r\n\r\n        <Route\r\n        exact\r\n        path=\"/user-messages/:userId/:userName\"\r\n        render={(props) => <UserMessages\r\n          {...props}\r\n          loggedIn={loggedIn}\r\n          headers={headers}\r\n          \r\n        />}\r\n        />\r\n        \r\n\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}